<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd"
  version="2.1">
  <persistence-unit name="test.unit">
    <provider>org.hibernate.ejb.HibernatePersistence</provider>
    <class>lv.nixx.poc.spring.data.domain.Adress</class>
    <class>lv.nixx.poc.spring.data.domain.Customer</class>
    <class>lv.nixx.poc.spring.data.domain.CustomerExtension</class>
    <class>lv.nixx.poc.spring.data.domain.CustomerType</class>
    <class>lv.nixx.poc.spring.data.domain.Person</class>
    <class>lv.nixx.poc.spring.data.domain.PersonAdditionalField</class>
    <class>lv.nixx.poc.spring.data.domain.PersonExtension</class>
    <class>lv.nixx.poc.spring.data.domain.Task</class>
    <class>lv.nixx.poc.spring.data.mappingsamples.joinedtable.BonusedClient</class>
    <class>lv.nixx.poc.spring.data.mappingsamples.joinedtable.GenericBankClient</class>
    <class>lv.nixx.poc.spring.data.mappingsamples.joinedtable.SalaryProjectClient</class>
    <class>lv.nixx.poc.spring.data.mappingsamples.joinedtable.SimpleClient</class>
    <class>lv.nixx.poc.spring.data.mappingsamples.joinedtable.Student</class>
    <class>lv.nixx.poc.spring.data.mappingsamples.joinedtable.VipClient</class>
    <class>lv.nixx.poc.spring.data.mappingsamples.joinedtable.VisaGoldClient</class>
    <class>lv.nixx.poc.spring.data.mappingsamples.singletable.BonusedClient</class>
    <class>lv.nixx.poc.spring.data.mappingsamples.singletable.GenericBankClient</class>
    <class>lv.nixx.poc.spring.data.mappingsamples.singletable.SalaryProjectClient</class>
    <class>lv.nixx.poc.spring.data.mappingsamples.singletable.SimpleClient</class>
    <class>lv.nixx.poc.spring.data.mappingsamples.singletable.Student</class>
    <class>lv.nixx.poc.spring.data.mappingsamples.singletable.VipClient</class>
    <class>lv.nixx.poc.spring.data.mappingsamples.singletable.VisaGoldClient</class>
    <class>lv.nixx.poc.spring.data.mappingsamples.tableperclass.BonusedClient</class>
    <class>lv.nixx.poc.spring.data.mappingsamples.tableperclass.GenericBankClient</class>
    <class>lv.nixx.poc.spring.data.mappingsamples.tableperclass.SalaryProjectClient</class>
    <class>lv.nixx.poc.spring.data.mappingsamples.tableperclass.SimpleClient</class>
    <class>lv.nixx.poc.spring.data.mappingsamples.tableperclass.Student</class>
    <class>lv.nixx.poc.spring.data.mappingsamples.tableperclass.VipClient</class>
    <class>lv.nixx.poc.spring.data.mappingsamples.tableperclass.VisaGoldClient</class>
    
    <shared-cache-mode>ALL</shared-cache-mode>
    <properties>
    
      <!--
        if you don't have a database already created append ;create=true to end of the jdbc url
      -->
      <property name="javax.persistence.jdbc.driver" value="org.apache.derby.jdbc.EmbeddedDriver"/>
      <property name="javax.persistence.jdbc.url" value="jdbc:derby:derbyDB;create=true"/>
      <property name="javax.persistence.jdbc.user" value=""/>
      <property name="javax.persistence.jdbc.password" value=""/>
 
      <!--  Settings for network Derby on standart port -->
      <!-- 
      <property name="javax.persistence.jdbc.url" value="jdbc:derby://localhost:1527/derbyDB;create=true"/>
      <property name="javax.persistence.jdbc.user" value=""/>
      <property name="javax.persistence.jdbc.password" value=""/>
      <property name="javax.persistence.jdbc.driver" value="org.apache.derby.jdbc.ClientDriver"/>
 	   -->
 	   
      <property name="hibernate.dialect" value="org.hibernate.dialect.DerbyDialect"/>
	  
	  <property name="hibernate.cache.use_second_level_cache" value="true" />
	  <property name="hibernate.cache.use_query_cache" value="true"/>
	  <property name="hibernate.cache.provider_class" value="org.hibernate.cache.EhCacheProvider" />
	  <property name="hibernate.cache.region.factory_class" value="org.hibernate.cache.ehcache.EhCacheRegionFactory" />
 	  
      <!--  
        if you just created the database, maybe
        you want hibernate to create a schema for you
        <property name="hibernate.hbm2ddl.auto" value="create"/> 
      -->
      <!-- <property name="hibernate.hbm2ddl.auto" value="create"/> -->
    </properties>
  </persistence-unit>
</persistence>