#management.endpoints.web.exposure.include=httptrace, trace, info, metrics, health
management.endpoints.web.exposure.include=*

management.endpoint.health.show-details=always

management.health.defaults.enabled=false
management.health.db.enabled=true
management.health.diskspace.enabled=false

springdoc.show-actuator=true

management.endpoints.web.base-path=/hello-actuator-management/actuator
management.server.port=8081

server.servlet.contextPath=/hello-actuator-poc
server.port=8080

spring.datasource.alpha.url=jdbc:mysql://localhost:3306/db_actuator?useUnicode=yes&characterEncoding=UTF-8
spring.datasource.alpha.username=user
spring.datasource.alpha.password=password
spring.datasource.alpha.driver-class-name=com.mysql.cj.jdbc.Driver

# Настройка hikari.connection-timeout в HikariCP задает максимальное время ожидания в миллисекундах для получения соединения из пула.
# Если в течение этого времени не удается получить соединение (например, если все соединения заняты),
# HikariCP выбрасывает исключение SQLTransientConnectionException. Значение по умолчанию 30 секунд
spring.datasource.alpha.hikari.connection-timeout=1000

spring.datasource.alpha.hikari.pool-name=AlphaDBPool

# Настройка hikari.max-lifetime в HikariCP определяет максимальное время жизни соединения в пуле,
# после которого оно будет закрыто и заменено новым, даже если соединение активно и не выбросило никаких ошибок.
# Значение по умолчанию  30 минут
spring.datasource.alpha.hikari.max-lifetime=35000

# Настройка hikari.validation-timeout в HikariCP указывает максимальное время, которое пул будет ожидать
# проверки соединения на "живость". Проверка осуществляется с использованием либо SQL-запроса (connection-test-query),
# либо стандартных механизмов проверки соединений базы данных.
# Значение по умолчению 5 секунд
spring.datasource.alpha.hikari.validation-timeout=500

# Настройка hikari.idle-timeout в HikariCP определяет максимальное время (в миллисекундах),
# в течение которого неактивное соединение может оставаться в пуле, прежде чем оно будет закрыто. Это относится к соединениям,
# которые не используются и остаются в режиме ожидания (idle). Если соединение остаётся неактивным дольше указанного времени,
# оно будет закрыто, чтобы освободить ресурсы.
# Значение по умолчанию: 600000 миллисекунд (10 минут).
spring.datasource.alpha.hikari.idle-timeout=5000

# Настройка hikari.minimum-idle в настройках HikariCP задает минимальное количество неактивных (idle) соединений,
# которые пул будет поддерживать на постоянной основе. Это означает, что если количество неактивных соединений
# упадет ниже этого значения, пул будет создавать новые соединения, чтобы поддерживать минимально необходимое количество.
# По умолчанию: Если minimum-idle не указано явно, значение будет равно maximum-pool-size
# (то есть пул работает с фиксированным количеством соединений).
#spring.datasource.alpha.hikari.minimum-idle=2

# Настройка hikari.maximum-pool-size в HikariCP определяет максимальное количество активных соединений,
# которые могут быть одновременно открыты в пуле. Это ограничение на количество соединений, которые пул может создавать и держать для обработки запросов.
# Значение по умолчанию: 10.
spring.datasource.alpha.hikari.maximum-pool-size=5

spring.datasource.beta.url=jdbc:mysql://localhost:3306/db_actuator?useUnicode=yes&characterEncoding=UTF-8
spring.datasource.beta.username=user
spring.datasource.beta.password=password
spring.datasource.beta.hikari.pool-name=BetaDBPool